/**
 * Copyright 2014 International Center for Tropical Agriculture (CIAT).
 * This file is part of:
 * Crop Wild Relatives
 * It is free software: You can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * at your option) any later version.
 * It is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * See <http://www.gnu.org/licenses/>.
 */

package Views.Desktop;

import Controllers.Occurrences.CTempOccurrences;
import Controllers.Tools.Policy;
import Controllers.Tools.TypePolicy;
import Controllers.Tools.TypeDataValidation;
import Tools.Configuration;
import java.io.File;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Steven Sotelo - stevenbetancurt@hotmail.com
 */
public class FrmDataValidation extends javax.swing.JDialog {
    private boolean exit;
    private CTempOccurrences cTempOccurrences;
    private ArrayList<Policy> policies;
    
    /**
     * Creates new form FrmDataValidation
     */
    public FrmDataValidation(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        exit=false;
        txtLog.setText(Configuration.DIRECTORY_DEFAULT);
        for(TypeDataValidation value: TypeDataValidation.values())
            cboSource.addItem(value);
        //Fill table
        TypePolicy[] types=TypePolicy.values();
        DefaultTableModel model = (DefaultTableModel) tblPolicies.getModel();
        for(int i=0;i<types.length;i++)
            model.addRow(new Object[]{false,types[i]});
        //Steps
        setPoliciesByStep(cboStep.getSelectedIndex());
    }
    
    /**
     * @return the exit
     */
    public boolean isExit() {
        return exit;
    }
    
    /**
     * @return return controller of temp occurrences
     */
    public CTempOccurrences getCTO(){
        return cTempOccurrences;
    }
    
    /**
     * @return return the current step selected
     */
    public int getStep()
    {
        return cboStep.getSelectedIndex() ;
    }
    
    /**
     * @return get the path of log
     */
    public String getLog(){
        return txtLog.getText();
    }
    
    /**
     * @return get the condition for the query
     */
    public String getCondition(){
        return txtCondition.getText();
    }
    
    /**
     * @return list of policies selected
     */
    public ArrayList<Policy> getPolicies(){
        return policies;
    }
    
    /**
     * @return if the review file should be created
     */
    public boolean getReviewData(){
        return chkReviewData.isSelected();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblSource = new javax.swing.JLabel();
        cboSource = new javax.swing.JComboBox();
        lblStep = new javax.swing.JLabel();
        cboStep = new javax.swing.JComboBox();
        lblLog = new javax.swing.JLabel();
        txtLog = new javax.swing.JTextField();
        cmdLog = new javax.swing.JButton();
        cmdCountries = new javax.swing.JButton();
        scpPolicies = new javax.swing.JScrollPane();
        tblPolicies = new javax.swing.JTable();
        cmdStart = new javax.swing.JButton();
        cmdSelect = new javax.swing.JButton();
        chkReviewData = new javax.swing.JCheckBox();
        lblCondition = new javax.swing.JLabel();
        txtCondition = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Data Validation");
        setResizable(false);

        lblSource.setText("Source:");

        lblStep.setText("Step:");

        cboStep.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Step 0: Custom", "Step 1: Cross check data", "Step 2: Taxonomy checks part 1", "Step 3: Taxonomy checks part 2", "Step 4: Taxonomy checks part 3", "Step 5: Geographic checks part 1", "Step 6: Geographic checks coords", "Step 7: Geographic checks georef", "Step 8: Compare origin stat " }));
        cboStep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboStepActionPerformed(evt);
            }
        });

        lblLog.setText("Log:");

        cmdLog.setText("Search");
        cmdLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdLogActionPerformed(evt);
            }
        });

        cmdCountries.setText("List Countries");
        cmdCountries.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCountriesActionPerformed(evt);
            }
        });

        tblPolicies.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Check", "Validation processes"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblPolicies.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPoliciesMouseClicked(evt);
            }
        });
        scpPolicies.setViewportView(tblPolicies);

        cmdStart.setText("Start");
        cmdStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdStartActionPerformed(evt);
            }
        });

        cmdSelect.setText("Unselect all");
        cmdSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSelectActionPerformed(evt);
            }
        });

        chkReviewData.setText("Review data");

        lblCondition.setText("Condition:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scpPolicies, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblLog)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtLog, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmdLog)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(chkReviewData)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmdCountries))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lblSource)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboSource, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblStep)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboStep, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cmdSelect)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cmdStart, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblCondition)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtCondition)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSource)
                    .addComponent(cboSource, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblStep)
                    .addComponent(cboStep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLog)
                    .addComponent(txtLog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmdLog)
                    .addComponent(cmdCountries)
                    .addComponent(chkReviewData))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCondition)
                    .addComponent(txtCondition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scpPolicies, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmdSelect)
                    .addComponent(cmdStart))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    private void cmdLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdLogActionPerformed
        // TODO add your handling code here:
        try
        {
            JFileChooser fc=new JFileChooser();
            fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            fc.setCurrentDirectory(new File(txtLog.getText()));
            if(fc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION)
                txtLog.setText(fc.getSelectedFile().getAbsolutePath());
        }
        catch(Exception ex)
        {
            System.out.println(ex);
        }
    }//GEN-LAST:event_cmdLogActionPerformed
        
    private void cmdStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdStartActionPerformed
        // TODO add your handling code here:
        try
        {
            policies=new ArrayList<Policy>();
            for(int i=0;i<tblPolicies.getRowCount();i++)
            {
                if((boolean)tblPolicies.getValueAt(i, 0))
                    policies.add( new Policy((TypePolicy)tblPolicies.getValueAt(i, 1)) );
            }
            cTempOccurrences=new CTempOccurrences();
            this.exit=true;
            this.setVisible(false);
            
        }
        catch(Exception ex)
        {
            System.out.println("Error start");
            System.out.println(ex);
        }
    }//GEN-LAST:event_cmdStartActionPerformed
    
    private void cmdSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSelectActionPerformed
        // TODO add your handling code here:
        setPoliciesTable(cmdSelect.getText().equals("Select all"));
    }//GEN-LAST:event_cmdSelectActionPerformed
    
    private void cboStepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboStepActionPerformed
        // TODO add your handling code here:
        int step=getStep();
        chkReviewData.setSelected(step==2 || step == 3 || step == 6 || step == 7);
        setPoliciesByStep(cboStep.getSelectedIndex());        
    }//GEN-LAST:event_cboStepActionPerformed
    
    private void cmdCountriesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCountriesActionPerformed
        // TODO add your handling code here:
        FrmCountries frmCountries =new FrmCountries(new JFrame(), true);
        frmCountries.setVisible(true);
    }//GEN-LAST:event_cmdCountriesActionPerformed

    private void tblPoliciesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPoliciesMouseClicked
        // TODO add your handling code here:
        int row = tblPolicies.rowAtPoint(evt.getPoint());
        int col = tblPolicies.columnAtPoint(evt.getPoint());
        /*if(col==0)
            cboStep.setSelectedIndex(0);*/
    }//GEN-LAST:event_tblPoliciesMouseClicked
    
    /**
     * Method that establish
     * @param step
     */
    private void setPoliciesByStep(int step)
    {
        setPoliciesTable(false);
        switch(step)
        {
            //Step 1: Cross check data
            case 1:
                setStatusTable(0, 3, true);
                break;
            //Step 2: Taxonomy checks part 1
            case 2:
                setStatusTable(4, 6, true);
                break;            
            //Step 4: Taxonomy checks part 2
            case 3:
                setStatusTable(7, 7, true);
                break;
            //Step 5: Taxonomy checks part 3
            case 4:
                setStatusTable(8, 8, true);
                break;
            //Step 3: Geographic checks part 1
            case 5:
                setStatusTable(9, 14, true);
                break;
            //Step 6: Geographic checks coords
            case 6:
                setStatusTable(15, 15, true);
                break;
            //Step 7: Geographic checks georef
            case 7:
                setStatusTable(16, 16, true);
                break;
            //Step 8: Geographic checks georef
            case 8:
                setStatusTable(17, 17, true);
                break;
            default:
                break;
        }
    }
    
    /**
     * Method that clear or put values check in the table
     * @param val status check
     */
    private void setPoliciesTable(boolean val)
    {
        setStatusTable(0,tblPolicies.getRowCount()-1,val);
        cmdSelect.setText(val?"Unselect all":"Select all");
    }
    
    /**
     * Method that change the value check of policies
     * @param init 
     * @param end
     * @param val 
     */
    private void setStatusTable(int init,int end, boolean val)
    {
        for(int i=init;i<=end;i++)
            tblPolicies.setValueAt(val, i, 0);
    }
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cboSource;
    private javax.swing.JComboBox cboStep;
    private javax.swing.JCheckBox chkReviewData;
    private javax.swing.JButton cmdCountries;
    private javax.swing.JButton cmdLog;
    private javax.swing.JButton cmdSelect;
    private javax.swing.JButton cmdStart;
    private javax.swing.JLabel lblCondition;
    private javax.swing.JLabel lblLog;
    private javax.swing.JLabel lblSource;
    private javax.swing.JLabel lblStep;
    private javax.swing.JScrollPane scpPolicies;
    private javax.swing.JTable tblPolicies;
    private javax.swing.JTextField txtCondition;
    private javax.swing.JTextField txtLog;
    // End of variables declaration//GEN-END:variables
    
    
}
