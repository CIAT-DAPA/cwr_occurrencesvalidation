/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views.Desktop;

import Controllers.Configuration.RasterFile;
import Tools.Configuration;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author HSOTELO
 */
public class FrmConf extends javax.swing.JDialog {

    private RasterFile raster;
    
    /**
     * Creates new form FrmConf
     */
    public FrmConf(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        txtRaster.setText(Configuration.DIRECTORY_DEFAULT);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblRaster = new javax.swing.JLabel();
        txtRaster = new javax.swing.JTextField();
        cmdRasterSearch = new javax.swing.JButton();
        cmdRasterUpdate = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Configuration");
        setResizable(false);

        lblRaster.setText("Raster:");

        cmdRasterSearch.setText("Search");
        cmdRasterSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdRasterSearchActionPerformed(evt);
            }
        });

        cmdRasterUpdate.setText("Update");
        cmdRasterUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdRasterUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblRaster)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtRaster, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmdRasterSearch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmdRasterUpdate)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRaster)
                    .addComponent(txtRaster, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmdRasterSearch)
                    .addComponent(cmdRasterUpdate))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cmdRasterSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdRasterSearchActionPerformed
        // TODO add your handling code here:
        try
        {
            JFileChooser fc=new JFileChooser();            
            fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
            fc.setCurrentDirectory(new File(txtRaster.getText()));
            if(fc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION)
                txtRaster.setText(fc.getSelectedFile().getAbsolutePath());
        }
        catch(Exception ex)
        {
            System.out.println(ex);
        }
    }//GEN-LAST:event_cmdRasterSearchActionPerformed

    private void cmdRasterUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdRasterUpdateActionPerformed
        // TODO add your handling code here:
        try
        {
            raster=new RasterFile(txtRaster.getText());
            if(raster.create(false))
            {
                JOptionPane.showMessageDialog(this, "Already created database, the process continue with inserts in the tables for every register");
                long rows=raster.register(true, true);
                if(rows>0)
                    JOptionPane.showMessageDialog(this, "Register complete. Rows: " + String.valueOf(rows));
                else
                    JOptionPane.showMessageDialog(this, "Error in register");
            }
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(this, "Error in file. " + ex.toString());
        }
    }//GEN-LAST:event_cmdRasterUpdateActionPerformed
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdRasterSearch;
    private javax.swing.JButton cmdRasterUpdate;
    private javax.swing.JLabel lblRaster;
    private javax.swing.JTextField txtRaster;
    // End of variables declaration//GEN-END:variables
}
