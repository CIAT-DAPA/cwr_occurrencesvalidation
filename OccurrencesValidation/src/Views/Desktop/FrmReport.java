/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views.Desktop;

import Controllers.Occurrences.CTempOccurrences;
import Controllers.Tools.Reports.TypeReport;
import Tools.Configuration;
import java.io.File;
import javax.swing.JFileChooser;

/**
 *
 * @author HSOTELO
 */
public class FrmReport extends javax.swing.JDialog {

    private boolean exit;
    
    /**
     * Creates new form FrmReport
     */
    public FrmReport(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        exit=false;
        txtDestination.setText(Configuration.DIRECTORY_DEFAULT);
        for(TypeReport value: TypeReport.values())
            cboType.addItem(value); 
        fixFields();
    }
    
    /**
     * Method that enable or disable some fields of  the form
     */
    private void fixFields()
    {
        txtCompare.setEnabled((TypeReport)cboType.getSelectedItem()==TypeReport.COMPARE_TO);
        txtCondition.setEnabled((TypeReport)cboType.getSelectedItem()==TypeReport.COMPARE_TO);
        txtIgnore.setEnabled((TypeReport)cboType.getSelectedItem()==TypeReport.COMPARE_TO);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblDestination = new javax.swing.JLabel();
        txtDestination = new javax.swing.JTextField();
        cmdLog = new javax.swing.JButton();
        cmdRun = new javax.swing.JButton();
        lblCompare = new javax.swing.JLabel();
        txtCompare = new javax.swing.JTextField();
        lblType = new javax.swing.JLabel();
        cboType = new javax.swing.JComboBox();
        lblCondition = new javax.swing.JLabel();
        txtCondition = new javax.swing.JTextField();
        lblIgnore = new javax.swing.JLabel();
        txtIgnore = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Summary");
        setResizable(false);

        lblDestination.setText("Destination:");

        cmdLog.setText("Search");
        cmdLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdLogActionPerformed(evt);
            }
        });

        cmdRun.setText("Run");
        cmdRun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdRunActionPerformed(evt);
            }
        });

        lblCompare.setText("Table to compare:");

        lblType.setText("Type:");

        cboType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTypeActionPerformed(evt);
            }
        });

        lblCondition.setText("Condition:");

        lblIgnore.setText("Ignore:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblType)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboType, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblDestination)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDestination)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmdLog))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblCompare)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCompare, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblCondition)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCondition))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblIgnore)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtIgnore))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 113, Short.MAX_VALUE)
                        .addComponent(cmdRun, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(108, 108, 108)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblType)
                    .addComponent(cboType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDestination)
                    .addComponent(txtDestination, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmdLog))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCompare)
                    .addComponent(txtCompare, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCondition)
                    .addComponent(txtCondition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIgnore)
                    .addComponent(txtIgnore, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmdRun)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cmdLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdLogActionPerformed
        // TODO add your handling code here:
        try
        {
            JFileChooser fc=new JFileChooser();
            fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            fc.setCurrentDirectory(new File(txtDestination.getText()));
            if(fc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION)
                txtDestination.setText(fc.getSelectedFile().getAbsolutePath());
        }
        catch(Exception ex)
        {
            System.out.println(ex);
        }
    }//GEN-LAST:event_cmdLogActionPerformed

    private void cmdRunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdRunActionPerformed
        // TODO add your handling code here:
        try
        {
            this.exit=true;
            this.setVisible(false);
        }
        catch(Exception ex)
        {
            System.out.println("Error start");
            System.out.println(ex);
        }
    }//GEN-LAST:event_cmdRunActionPerformed

    private void cboTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTypeActionPerformed
        // TODO add your handling code here:
        fixFields();
    }//GEN-LAST:event_cboTypeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cboType;
    private javax.swing.JButton cmdLog;
    private javax.swing.JButton cmdRun;
    private javax.swing.JLabel lblCompare;
    private javax.swing.JLabel lblCondition;
    private javax.swing.JLabel lblDestination;
    private javax.swing.JLabel lblIgnore;
    private javax.swing.JLabel lblType;
    private javax.swing.JTextField txtCompare;
    private javax.swing.JTextField txtCondition;
    private javax.swing.JTextField txtDestination;
    private javax.swing.JTextField txtIgnore;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the exit
     */
    public boolean isExit() {
        return exit;
    }
    
    /**
     * @return the type report
     */
    public TypeReport getTypeReport(){
        return (TypeReport)cboType.getSelectedItem();
    }

    /**
     * @return 
     */
    public String getDestination(){
        return txtDestination.getText();
    }
    
    public String getCompare(){
        return txtCompare.getText();
    }
    
    public String getCondition(){
        return txtCondition.getText();
    }
    
    public String getIgnore(){
        return txtIgnore.getText();
    }
}
